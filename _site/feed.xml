<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PolMine Project</title>
    <description>Website of the PolMine Project</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 15 Feb 2021 23:19:26 +0100</pubDate>
    <lastBuildDate>Mon, 15 Feb 2021 23:19:26 +0100</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>RcppCWB v0.3.2 'Dune Ride' ensures Apple Silicon compatibility. </title>
        <description>&lt;h1 id=&quot;rcppcwb-v032-dune-ride-ensures-apple-silicon-compatibility&quot;&gt;RcppCWB v0.3.2 ‘Dune Ride’ ensures Apple Silicon compatibility.&lt;/h1&gt;

&lt;p&gt;Apple’s new M1 chip has deservedly raised significant attention. The new Mac minis and 13 inch Macbook Pros running on “Apple Silicon” are fast, energy-saving and affordable at the same time. No doubt an increasing number of polmineR users will work on an M1 machine. So we need to take care that everything works with the new generation of processors.&lt;/p&gt;

&lt;p&gt;Technically, everything hinges on the &lt;a href=&quot;https://polmine.github.io/RcppCWB/&quot;&gt;RcppCWB&lt;/a&gt; package. The C code of the &lt;a href=&quot;http://cwb.sourceforge.net/&quot;&gt;Corpus Workbench (CWB)&lt;/a&gt; included in the RcppCWB package and the C++ wrappers exposing CWB performance are the basis for everything that makes analysing corpora with polmineR fast. So the crucial question was whether RcppCWB would compile on M1 machines?&lt;/p&gt;

&lt;p&gt;If you run R with the &lt;a href=&quot;https://en.wikipedia.org/wiki/Rosetta_(software)&quot;&gt;Rosetta&lt;/a&gt; emulator, everything is fine. But one issue arising with native M1 compiled code required our attention: If &lt;a href=&quot;https://developer.gnome.org/glib/&quot;&gt;GLib-2.0&lt;/a&gt;, a dependency of the CWB, is not yet present, it would be downloaded from the &lt;a href=&quot;https://github.com/PolMine/libglib/&quot;&gt;libglib&lt;/a&gt; repository we host with GitHub. And GLib binaries for the new processor architecture were not there yet. And RcppCWB, which had been developed assuming that every Mac has Intel inside, would not look for M1-compatible dependencies either.&lt;/p&gt;

&lt;p&gt;This is solved with &lt;a href=&quot;https://CRAN.R-project.org/package=RcppCWB&quot;&gt;RcppCWB v0.3.2&lt;/a&gt; which has just made its way to CRAN. The functionality of the package remains unchanged. Working on the configure script anyway, I tried to make it more robust and verbose so that users could get a better idea what is wrong when facing an issue when compiling the package. For instance, there is now a warning when &lt;a href=&quot;https://www.pcre.org/&quot;&gt;PCRE&lt;/a&gt; is present but has been compiled without Unicode support. Yet the primary focus of the new release is to ensure that RcppCWB (and polmineR, cwbtools etc) work seamlessly on the new Apple machines with M1 chips inside.&lt;/p&gt;

&lt;p&gt;This has been achieved. Because it is just not possible to get one of the new machines really quickly (delivery takes a few weeks), we used a cloud solution offered by MacStadium to be able to adjust things and run tests now. This worked nicely, no complaints. Nevertheless, making the adjustments required some attention. This is why this release of RcppCWB is called “Dune Ride”.&lt;/p&gt;

&lt;p&gt;You need further explanation? Dunes are made of sand, and processors are made of silicon, and silicon is made of sand, and so is the M1 chip, I guess, so rodeo with M1 is a dune ride, metaphorically.&lt;/p&gt;

&lt;p&gt;If you face issues running RcppCWB/polmineR/cwbtools on M1, please use &lt;a href=&quot;https://github.com/PolMine/RcppCWB/issues&quot;&gt;RcppCWB issues&lt;/a&gt; to let us know!&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Feb 2021 00:00:00 +0100</pubDate>
        <link>http://localhost:4000/posts/2021/02/04/RcppCWB-v0.3.2-Dune-Ride-Ensures-Apple-Silicon-Compatibility.html</link>
        <guid isPermaLink="true">http://localhost:4000/posts/2021/02/04/RcppCWB-v0.3.2-Dune-Ride-Ensures-Apple-Silicon-Compatibility.html</guid>
        
        <category>news</category>
        
        
        <category>Posts</category>
        
      </item>
    
      <item>
        <title>GermaParl v1.5.1 'Drunken Sailor' Released</title>
        <description>&lt;h1 id=&quot;germaparl-v151-drunken-sailor-released&quot;&gt;GermaParl v1.5.1 ‘Drunken Sailor’ Released&lt;/h1&gt;

&lt;p&gt;The &lt;a href=&quot;https://CRAN.R-project.org/package=GermaParl&quot;&gt;GermaParl&lt;/a&gt; package is
back at CRAN. The most recent version (v1.5.1) that has just been
released is the first one I expect to pass all checks on all systems. If
nothing goes wrong, it will be the first fully portable version of the
GermaParl R package.&lt;/p&gt;

&lt;p&gt;Following the formular ‘less is more’ has been a precondition for that.
I guess the song &lt;a href=&quot;https://en.wikipedia.org/wiki/Drunken_Sailor&quot;&gt;“What Shall We Do with the Drunken
Sailor”&lt;/a&gt; is widely known:
How do you get somebody, who has enjoyed too much previously sober
again? Metaphorically, this is what GermaParl has gone through now.
Functions to add further annotation layers were actually quite generic
have been removed from the GermaParl package, they have been moved to
the (GitHub-only) package
&lt;a href=&quot;https://github.com/PolMine/polmineR.misc&quot;&gt;polmineR.misc&lt;/a&gt;. Remaining
dependencies on the data.table and the RcppCWB package have also been
removed.&lt;/p&gt;

&lt;p&gt;The GermaParl package still offers the documentation of the data and a
very convenient download mechanism for the full GermaParl corpus. That’s
one rationale for the CRAN release. But more importantly from a
technical point of view, it includes some sample data. A next step will
be to use the sample data included in the GermaParl package in the
polmineR package, which can thus be turned a leaner package.&lt;/p&gt;

&lt;p&gt;And GermaParl is a much leaner package now, too. GermaParl is not a
drunken sailor any more with a terrible hangover (superfluous functions
and dependencies). As I believe, the package is quite sober now. Enjoy!&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Jul 2020 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/posts/2020/07/28/GermaParl-v1.5.1-Drunken-Sailor-Released.html</link>
        <guid isPermaLink="true">http://localhost:4000/posts/2020/07/28/GermaParl-v1.5.1-Drunken-Sailor-Released.html</guid>
        
        <category>news</category>
        
        
        <category>Posts</category>
        
      </item>
    
      <item>
        <title>polmineR v0.8.4 'Unicorn Dream' Released</title>
        <description>&lt;h1 id=&quot;polminer-v084-unicorn-dream-released&quot;&gt;polmineR v0.8.4 ‘Unicorn Dream’ Released&lt;/h1&gt;

&lt;p&gt;A new version of &lt;a href=&quot;https://CRAN.R-project.org/package=polmineR&quot;&gt;polmineR&lt;/a&gt;
(v0.8.4) is available at CRAN. Why do I call this release “Unicorn
Dream”? A unicorn dream is much better than a Unicode nightmare…&lt;/p&gt;

&lt;p&gt;The predominant focus of the new release is portability. CRAN checks for
Solaris reported an issue on Solaris that resulted from Unicode
characters in the package documentation. Removing Unicode characters
from all documentation objects shall solve this issue. Indeed, I am
really glad to see that &lt;a href=&quot;https://cloud.r-project.org/web/checks/check_results_polmineR.html&quot;&gt;CRAN check
results&lt;/a&gt;
report that polmineR can now be installed on Solaris without any
warnings.&lt;/p&gt;

&lt;p&gt;A second encoding issue caused an ERROR on CRAN check machines. There is
a Debian check machine with a UTF-8859-15 encoding. Yet handling
encodings by polmineR had been based on the premise that Windows
installations will have a latin-1 encoding, and that macOS and Linux
distributions will have a UTF-8 encoding. This assumption was too strong
and resulted in the aforementioned error. The new polmineR version is
more liberal: Linux users are not confined to use UTF-8 any more. So if
you have a taste for ISO-8859-1 … go for it.&lt;/p&gt;

&lt;p&gt;A third issue with portability and CRAN checks was that building the
package vignette required pandoc to be installed. But it isn’t on the
CRAN machines for macOS and Solaris, resulting in a warning. The
&lt;code class=&quot;highlighter-rouge&quot;&gt;knit_print()&lt;/code&gt; method that usually returns a &lt;code class=&quot;highlighter-rouge&quot;&gt;htmlwidget&lt;/code&gt; will now
return a &lt;code class=&quot;highlighter-rouge&quot;&gt;data.table&lt;/code&gt;, if pandoc is missing. Building and re-building
package vignettes will not yield a warning if pandoc is not present and
still result in a telling vignette.&lt;/p&gt;

&lt;p&gt;So my big hope is that polmineR v0.8.4 is the most portable version of
the package. I hope we will see an agreeable “OK” for all CRAN check
machines when all tests have been performed!&lt;/p&gt;

&lt;p&gt;Although I do not really believe that I will never have a nightshift
again caused by encoding issues and problems to handle Unicode, naming
the new polmineR release “Unicorn Dream” expresses my (naive) hopes for
a bright future and that encoding issues were ghosts haunting me only in
the past.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Jul 2020 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/posts/2020/07/22/polmineR-v0.8.4-Unicorn-Dream-Released.html</link>
        <guid isPermaLink="true">http://localhost:4000/posts/2020/07/22/polmineR-v0.8.4-Unicorn-Dream-Released.html</guid>
        
        <category>news</category>
        
        
        <category>Posts</category>
        
      </item>
    
      <item>
        <title>cwbtools v0.3.1 'Straight No Chaser' Released</title>
        <description>&lt;h1 id=&quot;cwbtools-v031-straight-no-chaser-released&quot;&gt;cwbtools v0.3.1 ‘Straight No Chaser’ Released&lt;/h1&gt;

&lt;p&gt;A new version of &lt;a href=&quot;https://CRAN.R-project.org/package=cwbtools&quot;&gt;cwbtools&lt;/a&gt;
(v0.3.1) is available at CRAN.&lt;/p&gt;

&lt;p&gt;The single change I want to highlight here is that the polmineR package
is not a (weak) dependency of cwbtools any more. The initial thrust for
that was to contain negative effects if polmineR can not be built for a
platform. Issues are more tricky to handle as long as polmineR depends
on cwbtools and cwbtools depends (though weakly) on polmineR.&lt;/p&gt;

&lt;p&gt;We now have a clarified struture that - within the PolMine family of
packages - polmineR depends on cwbtools and cwbtools depends on RcppCWB.
That’s it, straight no chaser. And this explains the naming of the new
release.&lt;/p&gt;

&lt;p&gt;Avoiding the polmineR dependency required replacing usage of some
high-level polmineR functions by lower-level functionality of the
RcppCWB package. Functions and unit tests have been re-written
accordingly. There is no change visible for the user. The only visible
changes concern some minor improvements of the user dialogues, see the
&lt;a href=&quot;https://polmine.github.io/cwbtools/news/index.html&quot;&gt;cwbtools changelog&lt;/a&gt;
if you are interested in the details.&lt;/p&gt;

&lt;p&gt;Looking into the future, cwbtools v0.3.1 prepares an upcoming release of
the GermaParl package. This package will offer download functionality to
install GermaParl from Zenodo (an open science data repository used for
depositing PolMine corpora), and it includes a small subset of GermaParl
for testing purposes. While the download functionality is not strictly
necessary (it is just a thin wrapper for &lt;code class=&quot;highlighter-rouge&quot;&gt;cwbtools::corpus_install()&lt;/code&gt;),
the sample data within the package shall be very useful to make polmineR
a leaner package that can rely on the GermaParl package for sample data.&lt;/p&gt;

&lt;p&gt;The structure of dependencies we aim at will then be: polmineR depends
on GermaParl and cwbtools, GermaParl depends on cwbtools, and cwbtools
(as well as polmineR) depends on RcppCWB. So this will be a structure
without any circularity. The current cwbtools release v0.3.1 “Straight
No Chaser” has prepared exactly that.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Jul 2020 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/posts/2020/07/21/cwbtools-v0.3.1-Straight-No-Chaser-Released.html</link>
        <guid isPermaLink="true">http://localhost:4000/posts/2020/07/21/cwbtools-v0.3.1-Straight-No-Chaser-Released.html</guid>
        
        <category>news</category>
        
        
        <category>Posts</category>
        
      </item>
    
      <item>
        <title>cwbtools v0.3.0 'Apple Picker' Released</title>
        <description>&lt;h1 id=&quot;cwbtools-v030-apple-picker-released&quot;&gt;cwbtools v0.3.0 ‘Apple Picker’ Released&lt;/h1&gt;

&lt;p&gt;A new version of &lt;a href=&quot;https://CRAN.R-project.org/package=cwbtools&quot;&gt;cwbtools&lt;/a&gt;
(v0.3.0) is available via CRAN and I do not want to miss explaining what
is new.&lt;/p&gt;

&lt;p&gt;First of all, the major &lt;em&gt;new&lt;/em&gt; feature is that it is now possible to
download the tarball with a CWB indexed corpora from a server and to
install corpus files to the general corpus storage. The whereabouts of a
corpus can also be stated via a Document Object Identifier (DOI),
i.e. there is a new argument &lt;code class=&quot;highlighter-rouge&quot;&gt;doi&lt;/code&gt; for the &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus_install()&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;At this stage, resolving the DOI to get the URL of the corpus tarball is
implemented for DOIs issued by &lt;a href=&quot;https://zenodo.org/&quot;&gt;Zenodo&lt;/a&gt; (using the
&lt;a href=&quot;https://CRAN.R-project.org/package=zen4R&quot;&gt;zen4R&lt;/a&gt; package, which is a
new dependency). Zenodo is an open science repository hosted by CERN.
Several corpora prepared in the PolMine Project have been published with
Zenodo recently. As a result, it has never been easier and more reliable
to install corpora.&lt;/p&gt;

&lt;p&gt;For instance, to install &lt;a href=&quot;https://zenodo.org/record/3831472#.XxFLfB1CRZ0&quot;&gt;the United Nations General Assembly (UNGA)
corpus&lt;/a&gt;, use this
function call:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install.packages(&quot;cwbtools&quot;) # cwbtools v0.3.0 required
corpus_install(doi = &quot;10.5281/zenodo.3831472&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this stage, further corpora that have been prepared in the PolMine
Project available at Zenodo are
&lt;a href=&quot;https://zenodo.org/record/3742113#.XxFLnR1CRZ0&quot;&gt;GermaParl&lt;/a&gt;,
&lt;a href=&quot;https://zenodo.org/record/3819374#.XxFLrx1CRZ0&quot;&gt;ParisParl&lt;/a&gt;,
&lt;a href=&quot;https://zenodo.org/record/3819505#.XxFLwR1CRZ0&quot;&gt;AustroParl&lt;/a&gt;,
&lt;a href=&quot;https://zenodo.org/record/3835540#.XxFL2x1CRZ0&quot;&gt;RegioParl&lt;/a&gt; and
&lt;a href=&quot;https://zenodo.org/record/3872263#.XxFL7x1CRZ0&quot;&gt;MigParl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The usability of Zenodo for depositing data is outstanding. As a DOI is
issued upon uploading data, the service is comfortable and appropriate
for scientific data at the same time. So we think that Zenodo is a very
good option to establish the accessibility of corpora (in line with FAIR
principles). It is perfectly open for anybody who wants to publish data.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;cwbtools::corpus_install()&lt;/code&gt; will work to download &lt;em&gt;any&lt;/em&gt; tarball
with a CWB indexed corpus from Zenodo. Preparing and uploading the
tarballs is not difficult at all.&lt;/p&gt;

&lt;p&gt;Concerning usability, user dialogues in the cwbtools package have been
reworked thoroughly. We started to use the
&lt;a href=&quot;https://CRAN.R-project.org/package=cli&quot;&gt;cli&lt;/a&gt; package to create a better
command line interface. Beyond a nicer appearance and more informative
messages, user dialogues that will guide a user through the installation
of a corpus have been rewritten and extended.&lt;/p&gt;

&lt;p&gt;There is a new strong support to store corpora in the system corpus
storage. If the respective directory structure is not yet present, the
user will be guided through the process of creating all directories that
are needed. Last but not least, defining the &lt;code class=&quot;highlighter-rouge&quot;&gt;CORPUS_REGISTRY&lt;/code&gt; variable
in the &lt;code class=&quot;highlighter-rouge&quot;&gt;.Renviron&lt;/code&gt; file is supported by a user dialogue, so that corpora
are available across sessions without further ado.&lt;/p&gt;

&lt;p&gt;It is quite some work that has gone into the new release of cwbtools.
But I am quite confident that the user experience may be much better
than before. As always, we will be happy to learn about your experiences
and suggestions.&lt;/p&gt;

&lt;p&gt;One final remark. Why is this release called “Apple Picker”? cwbtools
v0.3.0 is about making downloading and installing corpora as comfortable
as possible. I thought that an apple picker was a nice metaphor for
that.&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Jul 2020 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/posts/2020/07/10/cwbtools-v0.3.0-Apple-Picker-Released.html</link>
        <guid isPermaLink="true">http://localhost:4000/posts/2020/07/10/cwbtools-v0.3.0-Apple-Picker-Released.html</guid>
        
        <category>news</category>
        
        
        <category>Posts</category>
        
      </item>
    
      <item>
        <title>RcppCWB v0.3.0 'Sunrise' Released</title>
        <description>&lt;h1 id=&quot;rcppcwb-v030-sunrise-released&quot;&gt;RcppCWB v0.3.0 ‘Sunrise’ Released&lt;/h1&gt;

&lt;p&gt;We happily announce that RcppCWB v0.3.0 is available at CRAN!&lt;/p&gt;

&lt;p&gt;The deployment of the binaries for Windows and macOS users may still take a few days. But admittedly, this release is not about Windows and macOS, it is about Linux and Solaris.&lt;/p&gt;

&lt;p&gt;The first major modification of RcppCWB v0.3.0 concerns the configure script. It know checks systematically whether dependencies (ncurses, glib-2.0, pcre) are present and will issue a telling error message when requirements are not met.&lt;/p&gt;

&lt;p&gt;Second, the quick fix of RcppCWB v0.2.10 to use the ‘-fcommon’ flag to avoid GCC 10 errors with multiple includes has been dropped and replaced with a proper and durable solution:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Global variables in the original CWB C code that GCC 10 would detect to be defined several times because of multiple includes have been turned to external variables.&lt;/li&gt;
  &lt;li&gt;A newly written header file provides the definition that satisfies the compiler.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CRAN pushed me hard in this direction. But they are perfectly right to do so: GCC 10 and its dislike of multiple tentative definitions is not yet very common (a Fedora phenomenon at this stage). But it is just a matter of time to become the standard.&lt;/p&gt;

&lt;p&gt;The only changes in the R code of the package are as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The dynamic library is unloaded when the package is unloaded. This is good practice and it was overdue to adopt it.&lt;/li&gt;
  &lt;li&gt;CQP is initialized by default upon loading the package.  Among others, this should make it easier to implement a failsafe functionality in the cwbtools package for test loading CWB corpora.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See the NEWS.md file for further minor updates and modifications in the package, such as compiler warnings that have been addressed.&lt;/p&gt;

&lt;p&gt;Admittedly, CRAN pushed me forcefully to implement the changes I have sketched quickly and to remove remaining “bashisms”. But it is well taken that if we want your package to be on CRAN, portability and quality are standards CRAN rightfully enforces. Checking the package across systems with different configurations is not really the fun part of developing a package. The hardest part is to ensure the portability for Solaris. I am quite sure I am not the only one who thinks it is tricky and mind wrecking work.&lt;/p&gt;

&lt;p&gt;Because some aspects of preparing this release have been a nightmare and because I just saw that the package check status for Solaris is “OK”, I named this release “Sunrise”.&lt;/p&gt;

&lt;p&gt;If there is something that does not work, that needs improvement or that is in need of better documentation, please use the &lt;a href=&quot;https://github.com/PolMine/RcppCWB/issues&quot;&gt;GitHub issues of the RcppCWB package&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Jul 2020 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/posts/2020/07/09/RcppCWB-v0.3.0-Sunrise-Released.html</link>
        <guid isPermaLink="true">http://localhost:4000/posts/2020/07/09/RcppCWB-v0.3.0-Sunrise-Released.html</guid>
        
        <category>news</category>
        
        
        <category>Posts</category>
        
      </item>
    
      <item>
        <title>Reuniting the PolMine family</title>
        <description>&lt;h1 id=&quot;reuniting-the-polmine-family&quot;&gt;Reuniting the PolMine family&lt;/h1&gt;

&lt;p&gt;A new version of RcppCWB (v0.2.10) just made it to CRAN. Updates of polmineR and cwbtools are about to follow. Among others, the new versions will offer more performance and a better user experience: The download mechanism of the cwbtools package has been reworked thoroughly and the polmineR package will use the buttons of the DataTable JavaScript library, leading to workflows that are much more intuitive for exporting data than the &lt;code class=&quot;highlighter-rouge&quot;&gt;store()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;mail()&lt;/code&gt; methods originally included in the package.&lt;/p&gt;

&lt;p&gt;Admittedly, putting things this way involves a good deal of whitewashing. The past days brought tons of unexpected hard work to prepare the releases caused by an unexpected meltdown of the PolMine presence at GitHub. Users must have been wondering what was going on.&lt;/p&gt;

&lt;p&gt;The offspring of all calamities was a harmless CRAN message that RcppCWB would not compile on Fedora 32 which uses GCC10. I do not know any polmineR user who uses Fedora, but the matter needed to be fixed. Fedora is a forerunner to use the latest compilers. It is just a matter of time that Debian and Ubuntu will move to GCC10 too.&lt;/p&gt;

&lt;p&gt;So I submitted the new RcppCWB version two days before deadline CRAN hat set. Having run extensive checks of the new version, I was very confident that the package was addressing all issues CRAN had informed me about appropriatly. That assumption was perfectly true. But there was one more thing. A newly introduced test to prevent the usage of bash scripts and “bashisms” triggered the CRAN checks for incoming packages to fail. RcppCWB was archived. All dependencies of RcppCWB (polmineR and cwbtools) were archived. The PolMine suite of packages gone with the wind.&lt;/p&gt;

&lt;p&gt;This is where we stand: RcppCWB is back at CRAN for a few days. But when preparing the new releases of polmineR and cwbtools, all kinds of new CRAN checks and tests made one rework after another necessary. So I learned the tough way that the CRAN team is implementing policies in a much stricter manner than when I submitted the packages first.&lt;/p&gt;

&lt;p&gt;Even though it made my life miserable the past days, I highly appreciate what the CRAN team does. It s a great safeguard to maintain the quality and portability of CRAN-publshed packages. It helps to make our packages better and more reliable.&lt;/p&gt;

&lt;p&gt;Users have started to depend on the presence of RcppCWB, polmineR and cwbtools at CRAN. A couple of university courses use the packages and students may find it very frustrating that tools are not there, just as researchers. The current situation violates my own standards and what I want to achieve. So I really do apologize for the situation.&lt;/p&gt;

&lt;p&gt;What can we do in the meantime? Releases of the new packages are finalized and are awaiting approval to re-appear at CRAN. It’s just just a little PolMine-CRAN ping pong we need to endure. To offer a convenient installation mechanism, PolMine’s CRAN-style drat repository at GitHub can be used. Please proceed as follows to get polmineR and cwbtools:&lt;/p&gt;

&lt;div class=&quot;language-r highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;install.packages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;drat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 'drat' package needed to access drat repository easily&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addRepo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;polmine&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# PolMine in lower case here&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install.packages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;polmineR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install.packages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cwbtools&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;One cautionary note: Older R versions are difficult to get but necessary to prepare binary versions for outdated R versions. So if you want to download binary packages for Windows and macOS, R version 4.0 may be necessary.&lt;/p&gt;

&lt;p&gt;Believe me, I have learned my lesson. And everything we just experienced is a very strong stimulous for me to improve further to offer a suite of packages for the analysis of textual data that is as reliably there as possible.&lt;/p&gt;
</description>
        <pubDate>Tue, 30 Jun 2020 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/posts/2020/06/30/Reuniting-the-PolMine-family.html</link>
        <guid isPermaLink="true">http://localhost:4000/posts/2020/06/30/Reuniting-the-PolMine-family.html</guid>
        
        <category>news</category>
        
        
        <category>Posts</category>
        
      </item>
    
      <item>
        <title>Towards polmineR v0.8.0: Pipes ahead</title>
        <description>&lt;h1 id=&quot;towards-polminer-v080-pipes-ahead&quot;&gt;Towards polmineR v0.8.0: Pipes ahead&lt;/h1&gt;

&lt;p&gt;As I work towards the v0.8.0 release of the polmineR package, I have introduced two new classes (&lt;code class=&quot;highlighter-rouge&quot;&gt;corpus&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;subcorpus&lt;/code&gt;), and a somewhat new workflow to work with corpora and subcorpora. It shall eventually replace the known usage of the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition()&lt;/code&gt;-method and the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition&lt;/code&gt;-class. So what is new, in a nutshell? Subcorpora are now obtained from corpora using the &lt;code class=&quot;highlighter-rouge&quot;&gt;subset()&lt;/code&gt;-method.&lt;/p&gt;

&lt;p&gt;In this blogpost, I will explain and discuss this intervention in the vocabulary of polmineR. There are several aims associated with introducing two new classes &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;subcorpus&lt;/code&gt;, and specifying the &lt;code class=&quot;highlighter-rouge&quot;&gt;subset()&lt;/code&gt;-method for these classes. It shall…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;make the vocabulary of the polmineR package more intuitive;&lt;/li&gt;
  &lt;li&gt;integrate the use of pipes seamlessly in analytical workflows;&lt;/li&gt;
  &lt;li&gt;make the class system of the package more coherent;&lt;/li&gt;
  &lt;li&gt;be the basis to work with remote corpora;&lt;/li&gt;
  &lt;li&gt;bring some performance improvements as a goodie.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The new workflow is available in the new versions of polmineR on the development branch of the repository at GitHub. It can be installed as follows.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install_github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PolMine/polmineR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dev&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In the following examples, I will use the GermaParl corpus of plenary protocols of the German Bundestag. We activate the corpus after loading the polmineR package as follows.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;polmineR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GermaParl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# activate GERMAPARL corpus&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;the-new-workflow-a-short-demo-at-the-outset&quot;&gt;The new workflow: A short demo at the outset&lt;/h2&gt;

&lt;p&gt;Before going into verbose explanations, a short example shall convey the look and feel of what is new. The “old” vocabulary and workflow of the polmineR package relies on the creation of a &lt;code class=&quot;highlighter-rouge&quot;&gt;partition&lt;/code&gt; object using the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition()&lt;/code&gt;-method to work with subcorpora. For those who have already used polmineR, the following code will look familiar. If you want to count the number of occurrences of “Finanzkrise” in speeches given by Angela Merkel in the Bundestag in 2008, this is what we used to write:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;merkel2008&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GERMAPARL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speaker&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Angela Merkel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2008&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merkel2008&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Finanzkrise&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##          query count         freq
## 1: Finanzkrise     3 0.0001143554&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This workflow is now superseded by a combination of an explicit definition of a &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus&lt;/code&gt;-class using the &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus()&lt;/code&gt;-method as a constructor, and a &lt;code class=&quot;highlighter-rouge&quot;&gt;subset()&lt;/code&gt;-method that is defined for &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;subcorpus&lt;/code&gt; objects. Using the pipe operator (“%&amp;gt;%”) of the magrittr-package has been supported before, but the new workflow is deliberately designed to work with pipes. The previous example would now be written as follows.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GERMAPARL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speaker&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Angela Merkel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2008-11-26&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Finanzkrise&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##          query count      freq
## 1: Finanzkrise  2090 0.3273297&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So why do I think, this is a improvement? Let me go into the five aims of the refactoring exercise.&lt;/p&gt;

&lt;h2 id=&quot;aims-of-refactoring-polminer&quot;&gt;Aims of refactoring polmineR&lt;/h2&gt;

&lt;h3 id=&quot;from-partitions-to-subcorpora-a-more-intuitive-vocabulary&quot;&gt;From partitions to subcorpora: A more intuitive vocabulary&lt;/h3&gt;

&lt;p&gt;First and foremost, I want to make the vocabulary and the workflows of the polmineR package as intuitive as possible. My sense is that having the &lt;code class=&quot;highlighter-rouge&quot;&gt;subcorpus&lt;/code&gt;-class supersede the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition&lt;/code&gt; class and using the &lt;code class=&quot;highlighter-rouge&quot;&gt;subset()&lt;/code&gt;-method to create subcorpora from corpora will serve this purpose.&lt;/p&gt;

&lt;p&gt;When I started writing tutorials for polmineR last year (i.e. the &lt;a href=&quot;https://polmine.github.io/UCSSR&quot;&gt;“Using Corpora in Social Science Research”&lt;/a&gt; set of slides), an issue that had bothered me before re-occurred to me: Explaining why the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition&lt;/code&gt;-class is called “partition”, and why the polmineR terminology opts for using the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition()&lt;/code&gt;-method to create a subcorpus is clumsy. The naming of the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition&lt;/code&gt; class again and again required me to write at least one extra sentence. Something like this: “In the polmineR context, I call a subcorpus a ‘partition’ in line with language established in the French lexicometric tradition.” The French lexicometric tradition is still as rich and admirable as it has always been, but at the end of the day, the extra sentence is cumbersome. It is easier to just call a subcorpus a subcorpus.&lt;/p&gt;

&lt;p&gt;In fact, I had refrained from defining a &lt;code class=&quot;highlighter-rouge&quot;&gt;subcorpus&lt;/code&gt; class a couple of years ago  to avoid a namespace conflict with the rcqp package which included a &lt;code class=&quot;highlighter-rouge&quot;&gt;subcorpus&lt;/code&gt;-class. But as the former rcqp package has been superseded by the RcppCWB package, this potential namespace conflict has ceased to exist. So the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition()&lt;/code&gt;-method can be replaced by a &lt;code class=&quot;highlighter-rouge&quot;&gt;subset()&lt;/code&gt;-method defined for &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus&lt;/code&gt;- and &lt;code class=&quot;highlighter-rouge&quot;&gt;subcorpus&lt;/code&gt;-objects. You now derive a subcorpus from a corpus by subsetting the corpus. My sense is that this is more intuitive, and you can explain workflows in a straight-forward manner, without the explanatory detours I have mentioned.&lt;/p&gt;

&lt;h3 id=&quot;subsetting-subcorpora-a-more-intuitive-workflow-using-pipes&quot;&gt;Subsetting (sub)corpora: A more intuitive workflow using pipes&lt;/h3&gt;

&lt;p&gt;The new workflow that combines the &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;subcorpus&lt;/code&gt; class and the &lt;code class=&quot;highlighter-rouge&quot;&gt;subset()&lt;/code&gt;-method is designed to work with pipes that have been popularized in the context of the “tidyverse”, and with the dplyr-package in particular.&lt;/p&gt;

&lt;p&gt;To count the number of occurrences of “Finanzkrise” in speeches given by Angela Merkel in the Bundestag, the extensive, “classic” code would be as follows.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;gparl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GERMAPARL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merkel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gparl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speaker&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Angela Merkel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merkel_fincris&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merkel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Finanzkrise&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To avoid defining variables you might not need later on and that will spam your global environment, you might write this one-liner.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GERMAPARL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speaker&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Angela Merkel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Finanzkrise&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##          query count        freq
## 1: Finanzkrise    36 5.13219e-05&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Quite obviously, this is not particularly easy to read. Using a pipe results in code that is much easier to digest.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GERMAPARL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speaker&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Angela Merkel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Finanzkrise&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##          query count        freq
## 1: Finanzkrise    36 5.13219e-05&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notably the dplyr package that imports the magrittr pipe operator by default has popularised by the usage of pipes. With good reasons. Pipes are not a good idea within packages, but great for developing an analysis. Using pipes helps to organise the code of your analysis cleanly.&lt;/p&gt;

&lt;p&gt;To prepare using pipes in analyses using polmineR by default, the package now imports the operator the same way dplyr does: Once you load polmineR, the pipe operator is available. I encourage polmineR users to use pipes, and I started using pipes in the examples in the documentation.&lt;/p&gt;

&lt;h3 id=&quot;subsetting-subcorpora-the-flexibility-of-non-standard-evaluation&quot;&gt;Subsetting (sub)corpora: The flexibility of non-standard evaluation&lt;/h3&gt;

&lt;p&gt;The move from the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition()&lt;/code&gt;-method to the &lt;code class=&quot;highlighter-rouge&quot;&gt;subset()&lt;/code&gt;-method to create subcorpora entails that non-standard evaluation (NSE) can now be used to define subcorpora. I gratefully admit that this idea was suggested originally by Christoph Leonhardt in a GitHub issue. For defining subcorpora, you can now use logical operators, and actually anything you know from subsetting a &lt;code class=&quot;highlighter-rouge&quot;&gt;data.frame&lt;/code&gt;. (Note that the object resulting from subsetting a corpus will &lt;em&gt;not&lt;/em&gt; be a &lt;code class=&quot;highlighter-rouge&quot;&gt;data.frame&lt;/code&gt;!).&lt;/p&gt;

&lt;p&gt;You can now write expressions that will feel well-known natural for R users. The specialized yet limiting syntax of the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition()&lt;/code&gt;-method can be overcome. Consider the following examples.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;merkel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GERMAPARL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speaker&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Angela Merkel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merkel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GERMAPARL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Merkel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speaker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merkel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GERMAPARL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speaker&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Angela Merkel&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2008&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdu2008&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GERMAPARL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2008&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;party&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;CDU&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;presidency&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interjection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;FALSE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdu_lp17&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GERMAPARL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lp&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;17&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;party&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;CDU&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%in%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;government&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;the-corpus-and-the-subcorpus-class-a-more-coherent-class-system&quot;&gt;The corpus and the subcorpus class: A more coherent class system&lt;/h3&gt;

&lt;p&gt;This is a more technical consideration that requires a basic knowledge of object-oriented programming (OOP), but it will be important for the long-term development of polmineR: An aspect of the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition&lt;/code&gt; class that had disturbed me for a while was that it is actually a hybrid class serving two purposes at the same time.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;partition&lt;/code&gt; class inherits from the elementary &lt;code class=&quot;highlighter-rouge&quot;&gt;teststat&lt;/code&gt; superclass. The &lt;code class=&quot;highlighter-rouge&quot;&gt;textstat&lt;/code&gt; class is the mother of all classes that keep statistical information derived from corpora or subcorpora in a slot called &lt;code class=&quot;highlighter-rouge&quot;&gt;stat&lt;/code&gt;. Generic methods such as &lt;code class=&quot;highlighter-rouge&quot;&gt;nrow()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;round()&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;sort()&lt;/code&gt; are defined for the &lt;code class=&quot;highlighter-rouge&quot;&gt;texstat&lt;/code&gt; class. So you have lots of additional functionality available for classes inheriting from the &lt;code class=&quot;highlighter-rouge&quot;&gt;textstat&lt;/code&gt; class (such as the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition&lt;/code&gt; class) without extra programming effort.&lt;/p&gt;

&lt;p&gt;But the main purpose of the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition&lt;/code&gt;-method is actually to organise information on the definition of a subcorpus. In addition, it could be used to store an evaluation of counts. But the &lt;code class=&quot;highlighter-rouge&quot;&gt;count&lt;/code&gt;-class is already there for count statistics, and specialized for this purpose. Even though there is still a case for keeping the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition&lt;/code&gt; class, it is much more logical to keep the management of corpora and subcorpora, and of statistical evaluations seperate. So the solution now is that we have an elementary &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus&lt;/code&gt; class, and a &lt;code class=&quot;highlighter-rouge&quot;&gt;subcorpus&lt;/code&gt; class that inherits from it.&lt;/p&gt;

&lt;p&gt;The introduction of the &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus&lt;/code&gt; class is something like a side-effect of cleaning up the structure of classes of the package. But I think it will help to make code more expressive and robust. It changes the way we work with corpora somewhat. Traditionally, we wrote&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;s_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GERMAPARL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now you should write…&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GERMAPARL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is somewhat longer, yet more expressive. What is more, the constructor for the &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus&lt;/code&gt; class, the &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus()&lt;/code&gt;-method, can now perform a set of standard checks for the input, such as checking that all letters of the corpus id are uppercase.&lt;/p&gt;

&lt;h3 id=&quot;the-door-is-open-working-with-remote-corpora&quot;&gt;The door is open: Working with remote corpora&lt;/h3&gt;

&lt;p&gt;There is an even more substantial advantage of the introduction of the &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus&lt;/code&gt; class. The refactoring of the class system opens the door to implement a &lt;code class=&quot;highlighter-rouge&quot;&gt;remote_corpus&lt;/code&gt; class to manage information on a corpus that is not stored locally, but on a remote server. The implementation I have in mind is a server that runs OpenCPU. This is already implemented experimentally, see the documentation for the &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus()&lt;/code&gt;-method (&lt;code class=&quot;highlighter-rouge&quot;&gt;?corpus&lt;/code&gt;), the argument &lt;code class=&quot;highlighter-rouge&quot;&gt;server&lt;/code&gt; in particular.&lt;/p&gt;

&lt;p&gt;A corpus stored locally will almost always be the fastest option. But at times, you may want to omit downloading a large corpus. More importantly, there is a significant set of scenarios when licenses actually prohibit transferring a corpus. Working with a remote corpus that is not transferred may be part of the solution. Explaining and illustrating this in detail goes beyond this post. An upcoming blogpost shall explain how you can work with remote corpora.&lt;/p&gt;

&lt;h3 id=&quot;subsetting-corpora-faster-than-creating-partitions&quot;&gt;Subsetting corpora: Faster than creating partitions&lt;/h3&gt;

&lt;p&gt;A final goodie: Creating subcorpora from corpora using the &lt;code class=&quot;highlighter-rouge&quot;&gt;subset()&lt;/code&gt;-method is faster than creating a &lt;code class=&quot;highlighter-rouge&quot;&gt;partition&lt;/code&gt;. If we create a &lt;code class=&quot;highlighter-rouge&quot;&gt;partition&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;subcorpus&lt;/code&gt; of the GERMAPARL corpus a couple of times (five times here), the new subsetting-procedure takes on average only half of the time compared to the old procedure. See the following basic benchmark.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2019-06-06-Towards-polmineR-v0.8.0-Pipes-ahead/benchmark-1.png&quot; alt=&quot;plot of chunk benchmark&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The performance improvement results from a new procedure for decoding structural attributes for an entire corpus. Note that the improvement will be more limited if you subset an existing subcorpus. Nevertheless: Subsetting an entire corpus is a significant scenario, and cutting the time consumed by 50% is substantial.&lt;/p&gt;

&lt;h2 id=&quot;discussion&quot;&gt;Discussion&lt;/h2&gt;

&lt;p&gt;The presented intervention in the polmineR package is non-trivial and significant. While many aspects are uncontroversial (I guess nobody will dislike a performance increase), I would like to two address aspects that are more disputable.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The introduction of the &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus&lt;/code&gt; class comes at a cost: The quanteda package also defines a class with the same name. The polmineR package uses the S4 class system, quanteda uses S3, but both packages use the same constructor, the &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus()&lt;/code&gt;-method. If you load the polmineR package after having loaded quanteda, or vice versa, there will now be a warning on a namespace conflict. This is far from ideal, as the quanteda package includes important analytical functionality polmineR users may want to use. Having thought about the pros and cons, I thought the namespace conflict may be bearable: First of all, there is no substantial problem beyond the warning issued, if you use polmineR to evaluate a corpus and quanteda for there further analytics. Second, the solution to omit defining the &lt;code class=&quot;highlighter-rouge&quot;&gt;corpus()&lt;/code&gt;-method in polmineR would have violated the aim to establish a new naming of classes/methods that is as intuitive as possible.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Another question was whether using the &lt;code class=&quot;highlighter-rouge&quot;&gt;subset()&lt;/code&gt;-method might not provoke the misunderstanding that the result would be a &lt;code class=&quot;highlighter-rouge&quot;&gt;data.frame&lt;/code&gt;. Indeed, I had worked with a &lt;code class=&quot;highlighter-rouge&quot;&gt;zoom()&lt;/code&gt;-method experimentally.  But when moving from a corpus to a subcorpus, it is not actually a “zooming in”-operation that is performed. If you extract the speeches given by Angela Merkel, for instance, these passages of speech are scattered across many protocols. So the term “zoom” will not capture well what you actually do (thanks to Max Hugendubel and  Stefan Haußner for their thoughtful input on this!). So I do not think that that omitting usage of the &lt;code class=&quot;highlighter-rouge&quot;&gt;subset()&lt;/code&gt;-method is the solution, but documenting and explaining the workflow within the package is what matters.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;roadmap&quot;&gt;Roadmap&lt;/h2&gt;

&lt;p&gt;Introducing the new workflow is not a small intervention. Fully consolidating the code and updating the documentation is yet to be accomplished. It will still take some time: I plan to relase v0.8.0 this summer (July/August) once all known bugs are removed and when having reworked the documentation.&lt;/p&gt;

&lt;p&gt;Given the size of the intervention, I do not want to deprecate the old workflow prematurely:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In v.0.8.0, the “old” workflow (that uses the &lt;code class=&quot;highlighter-rouge&quot;&gt;partition()&lt;/code&gt;-method) will remain fully intact.&lt;/li&gt;
  &lt;li&gt;v0.9.0  will issue warning messages that the old workflow is deprecated.&lt;/li&gt;
  &lt;li&gt;Only with v1.0.0 I will clean up the code and remove functionality that will then knowingly be defunct.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h2&gt;

&lt;p&gt;I gratefully acknowledge the feedback of Christoph Leonhardt on many questions I had whether the new workflow is more intuitive. A discussion with the text mining group of my department at the University of Duisburg-Essen encouraged me to finally advertise the changes made with this blogpost, thanks for the debate and feedback!&lt;/p&gt;

</description>
        <pubDate>Thu, 06 Jun 2019 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/posts/2019/06/06/Towards-polmineR-v0.8.0-Pipes-ahead.html</link>
        <guid isPermaLink="true">http://localhost:4000/posts/2019/06/06/Towards-polmineR-v0.8.0-Pipes-ahead.html</guid>
        
        <category>news</category>
        
        
        <category>Posts</category>
        
      </item>
    
      <item>
        <title>Towards polmineR v0.8.0: An annotation workflow </title>
        <description>&lt;h1 id=&quot;towards-polminer-v080-a-new-annotation-workflow&quot;&gt;Towards polmineR v0.8.0: A new annotation workflow&lt;/h1&gt;

&lt;p&gt;The polmineR package strives to offer a basic programming vocabulary to implement workflows for complex text analytical tasks, including annotation. The basic requirements for this, i.e. the ability to reconstruct (passages of) full text at any time has always been there, but the annotation functionality has been an unfullfilled promised. As we are approaching v0.8.0, the idea to realize an annotation workflow shall finally materialize.&lt;/p&gt;

&lt;p&gt;In this blog post, I would like to introduce a new workflow to annotate classes inheriting from the &lt;code class=&quot;highlighter-rouge&quot;&gt;textstat&lt;/code&gt; class, such as an analysis for keywords-in-context (&lt;code class=&quot;highlighter-rouge&quot;&gt;kwic&lt;/code&gt;) or of &lt;code class=&quot;highlighter-rouge&quot;&gt;cooccurrences&lt;/code&gt;. It is available in its current form starting from polmineR version 0.7.11.9023, available on the development branch of polmineR at GitHub. It can be installed as follows (if you have the devtools package installed):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install_github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PolMine/polmineR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The impetus for developing the functionality came from using a dictionary to score the degree of populism in  parliamentary speeches. But using dictionaries comes with a risk. The validity of measurements using dictionaries can not always be taken for granted, given the ambiguity of terms. This is the idea that suggests itself: For annotation and disambiguation, it would be nice to have a simple and efficient “pure R” workflow, i.e. we do not want to leave the R session we are using for the rest of our analysis of corpora and further data.&lt;/p&gt;

&lt;p&gt;To keep things simple, the scenario I use here is a simple effort to disambiguate (the German word) “Integration”. Fairly often, it is used to refer to the integration of immigrants into society. But there are other relevant contexts with a different meaning. You can also talk about the integration of unemployer persons into the labour market, or of handicapped persons into society. Thus, let us assume we want to count the number of occurrences of “Integration” in the context of migration and integration affairs and that we want to avoid counting the occurrence of “Integration” in other contexts.&lt;/p&gt;

&lt;p&gt;This disambiguation might also be achieved through a rule-based procedure (i.e. a dictionary of words required to occurr in the neighborhood of our match, and/or a dictionary preventing a match to be counted), or a procedure based on training data. But to develop either approach, manual inspection and annotation may be necessary as a first step anyway. So this is why we need a workflow for manual annotation. Once we have it at hand, we can also use it for a brute-force manual annotation from dusk till dawn for all matches without further sophistication. At times, this appraoch may not be the worst one from the “know your data” and validity point of view.&lt;/p&gt;

&lt;p&gt;The solution polmineR is now able to offer is a &lt;a href=&quot;https://www.rstudio.com/resources/webinars/shiny-gadgets-interactive-tools/&quot;&gt;shiny gadget&lt;/a&gt; that uses the &lt;a href=&quot;https://handsontable.com/&quot;&gt;Handsontable&lt;/a&gt; JavaScript library which is exposed through the &lt;a href=&quot;https://jrowen.github.io/rhandsontable/&quot;&gt;rhandsontable&lt;/a&gt; package. When you start the gadget in an RStudio session, it will be shown in the Viewer pane of RStudio, and you will have the results of your annotation exercise in the R sessions right away, without having to export data and switching applications. The following animated gif may convey the essence and the look and feel of this new feature.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/2019-05-17-Towards-polmineR-v0.8.0/annotation_demo.gif&quot; alt=&quot;fff&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now for the more verbose explanation how to use the new functionality, including the code. We start by loading polmineR and activating the GERMAPARL corpus of parliamentary debates in the German Bundestag.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;polmineR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GermaParl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# activate GERMAPARL corpus&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then we generagte a &lt;code class=&quot;highlighter-rouge&quot;&gt;kwic&lt;/code&gt; object using the &lt;code class=&quot;highlighter-rouge&quot;&gt;kwic()&lt;/code&gt;-method. Pursuing the scenario introduced before, we look up matches for “Integration” in the GERMAPARL corpus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GERMAPARL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Integration&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The resulting object &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; has used the default left and right context of 5 tokens. Often, we will find that we may want to see more words to solidify our annotation decisions. For this, we use a new argument of the &lt;code class=&quot;highlighter-rouge&quot;&gt;enrich()&lt;/code&gt;-method to get us an extra 5 words to the left and to the right of our search windows.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enrich&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extra&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When &lt;code class=&quot;highlighter-rouge&quot;&gt;kwic&lt;/code&gt; objects are generated and enriched, a &lt;code class=&quot;highlighter-rouge&quot;&gt;data.table&lt;/code&gt; in the slot &lt;code class=&quot;highlighter-rouge&quot;&gt;stat&lt;/code&gt; of the object is filled with the concordance lines. This table can be augmented with a new column as follows. In our example, we add a (logical) column called “mi” (for migration and integration) to indicate whether our match for “Integration” occurrs in a migration and integration context.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;annotations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;what&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note that you can also add columns with a character vector, or a factor. Assigning a factor can be a good choice, when you want to offer users or yourself a limited set of choices. One of the beauties of basing the shiny widget on the &lt;code class=&quot;highlighter-rouge&quot;&gt;Handsontable&lt;/code&gt; library for html spreadsheets is that for factor columns, a drop down menu is used for data input by default. See the examples for the annotation functionality (&lt;code class=&quot;highlighter-rouge&quot;&gt;?annotations&lt;/code&gt;) to see an example.&lt;/p&gt;

&lt;p&gt;Now we have a kwic object with the annotation layer we just added. We can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;edit()&lt;/code&gt; method to call the shiny gadget we have been talking about and that you could see in the initial animated image.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;edit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once you call the &lt;code class=&quot;highlighter-rouge&quot;&gt;edit()&lt;/code&gt;-method, the gadget pops up in the RStudio Viewer pane, and you can edit the annotations (here: the “mi”-column) as you wish, in a manner you would know from a conventional spreadsheet program such as Excel.&lt;/p&gt;

&lt;p&gt;Once you finished editing annotations, click the “Done”-button, and the results of the annotation effort are available in the R session. You can get the &lt;code class=&quot;highlighter-rouge&quot;&gt;data.table&lt;/code&gt; with the annotations by calling the &lt;code class=&quot;highlighter-rouge&quot;&gt;annotations()&lt;/code&gt;-method on the annotated object.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;annotations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And of course, you can aggregate the result. For instance, to count the number of TRUE/FALSE classifications, use the notation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;data.table&lt;/code&gt;-package to aggregate results for the column “mi”.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;annotations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Having gone through our &lt;code class=&quot;highlighter-rouge&quot;&gt;kwic&lt;/code&gt; object, the real work in our analysis to obtain a substantive result will usually only start. For instance, if the aim was just do get rid of false matches, use the &lt;code class=&quot;highlighter-rouge&quot;&gt;subset()&lt;/code&gt;-method on the &lt;code class=&quot;highlighter-rouge&quot;&gt;kwic&lt;/code&gt; object to discard the matches we have annotated with FALSE.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;x_min&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mi&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# see the length of the shortened object&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Quite obviously, it may be tedious to go through concordances if we have a large number of matches. It may be very attractive to use a limited set of annotated lines as training data. For most ML exercises, we will need a Document-Term-Matrix. You get it as follows…&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;n&quot;&gt;dtm&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as.DocumentTermMatrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_attribute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;word&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And we have the labels for the algorithm at hand, recall that we can get it by calling &lt;code class=&quot;highlighter-rouge&quot;&gt;annotations()&lt;/code&gt;. But explaining how to do the machine learning part goes beyond this post: The aim here has been to introduce the new annotation workflow of the polmineR package.&lt;/p&gt;

&lt;p&gt;Just a final remark: You can annotate and edit any object that inherits from the &lt;code class=&quot;highlighter-rouge&quot;&gt;textstat&lt;/code&gt;-class. Apart from annotating &lt;code class=&quot;highlighter-rouge&quot;&gt;kwic&lt;/code&gt;-objects, annotating &lt;code class=&quot;highlighter-rouge&quot;&gt;cooccurrences&lt;/code&gt; may be an important use case.&lt;/p&gt;

&lt;p&gt;I hope you find the new annotation functionality useful. Feedback is welcome!&lt;/p&gt;
</description>
        <pubDate>Fri, 17 May 2019 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/posts/2019/05/17/Towards-polmineR-v0.8.0-A-new-annotation-workflow.html</link>
        <guid isPermaLink="true">http://localhost:4000/posts/2019/05/17/Towards-polmineR-v0.8.0-A-new-annotation-workflow.html</guid>
        
        <category>news</category>
        
        
        <category>Posts</category>
        
      </item>
    
      <item>
        <title>RcppCWB v0.2.6 at CRAN: Towards publishing cwbtools</title>
        <description>&lt;script&gt;
  function resizeIframe(obj) {
    obj.style.height = obj.contentWindow.document.body.scrollHeight + 'px';
  }
&lt;/script&gt;

&lt;h1 id=&quot;rcppcwb-v026-at-cran-towards-publishing-cwbtools&quot;&gt;RcppCWB v0.2.6 at CRAN: Towards publishing cwbtools&lt;/h1&gt;

&lt;p&gt;This week, a new version of &lt;em&gt;RcppCWB&lt;/em&gt; made it to &lt;a href=&quot;https://CRAN.R-project.org/package=RcppCWB&quot;&gt;CRAN&lt;/a&gt;. The package exposes the functionality of the Corpus Worbench, adding a limited number of performance-critical functions written in Rcpp/C++. Packages such as &lt;em&gt;polmineR&lt;/em&gt; are built on top of &lt;em&gt;RcppCWB&lt;/em&gt; and serve as a much more comfortable “front-end”.&lt;/p&gt;

&lt;p&gt;The new RcppCWB version exposes two new functions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;em&gt;cl_charset_name()&lt;/em&gt;-function is about performance and efficiency. It gives access to the information on the encoding of a corpus kept in memory after the registry file describing the corpus has been parsed. Now, to check the encoding, the registry files needs not be read and parsed again and again, resulting in a performance gain. The new function is a model for further similar functions that will replace inefficient functionality to read and parse registry files in the &lt;em&gt;polmineR&lt;/em&gt; package.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;em&gt;cl_delete_corpus()&lt;/em&gt; is at least as important. It is all about flexibility. With this function, the parsed information from a registry file can be removed from memory, so that the registry file is parsed afresh upon using a corpus the next time. The scenario for this function is that we want changes we made for a corpus to become effective. Particularly when we add new structural attributes to a corpus, we now do not have to restart our R session to make the changed attribute available. This is really important to see indexed corpora not only as efficient data, but as reasonably flexible data too.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;em&gt;cl_delete_corpus()&lt;/em&gt; function is part of a development to make further use of &lt;em&gt;RcppCWB&lt;/em&gt; as a backend for the &lt;em&gt;cwbtools&lt;/em&gt; package, available only at &lt;a href=&quot;https://www.github.com/PolMine/cwbtools&quot;&gt;GitHub&lt;/a&gt; at this stage. The package is not yet mature, but is intended to supplement &lt;em&gt;Rcpp&lt;/em&gt; and &lt;em&gt;polmineR&lt;/em&gt; to have a seamless interface between R and the Corpus Workbench, and to be move beyond a static view of indexed corpora, i.e. to turn them into a much more flexbile resource than they are so far. Adding usability and flexibility to efficiency will be the purpose of &lt;em&gt;cwbtools&lt;/em&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 25 Oct 2018 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/posts/2018/10/25/RcppCWB_v0.2.6_at_CRAN.html</link>
        <guid isPermaLink="true">http://localhost:4000/posts/2018/10/25/RcppCWB_v0.2.6_at_CRAN.html</guid>
        
        <category>news</category>
        
        
        <category>Posts</category>
        
      </item>
    
  </channel>
</rss>
